<?php

/**
 * This is the model base class for the table "sources".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Source".
 *
 * Columns in table "sources" available as properties of the model,
 * followed by relations of table "sources" available as properties of the model.
 *
 * @property integer $id
 * @property string $label
 * @property string $url
 * @property string $category_pattern
 * @property string $news_pattern
 * @property integer $active
 * @property string $created_at
 * @property string $updated_at
 *
 * @property ParserQueue[] $parserQueues
 * @property PendingNews[] $pendingNews
 */
abstract class BaseSource extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'sources';
    }

    public static function label($n = 1)
    {
        return Yii::t('app', 'Source|Sources', $n);
    }

    public static function representingColumn()
    {
        return 'label';
    }

    public function rules()
    {
        return array(
            array('label, url', 'required'),
            array('active', 'numerical', 'integerOnly' => true),
            array('label, url, category_pattern, news_pattern', 'length', 'max' => 255),
            array('created_at, updated_at', 'safe'),
            array(
                'category_pattern, news_pattern, active, created_at, updated_at',
                'default',
                'setOnEmpty' => true,
                'value' => null
            ),
            array(
                'id, label, url, category_pattern, news_pattern, active, created_at, updated_at',
                'safe',
                'on' => 'search'
            ),
        );
    }

    public function relations()
    {
        return array(
            'parserQueues' => array(self::HAS_MANY, 'ParserQueue', 'source_id'),
            'pendingNews' => array(self::HAS_MANY, 'PendingNews', 'source_id'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'label' => Yii::t('app', 'Label'),
            'url' => Yii::t('app', 'Url'),
            'category_pattern' => Yii::t('app', 'Category Pattern'),
            'news_pattern' => Yii::t('app', 'News Pattern'),
            'active' => Yii::t('app', 'Active'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'parserQueues' => null,
            'pendingNews' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('label', $this->label, true);
        $criteria->compare('url', $this->url, true);
        $criteria->compare('category_pattern', $this->category_pattern, true);
        $criteria->compare('news_pattern', $this->news_pattern, true);
        $criteria->compare('active', $this->active);
        $criteria->compare('created_at', $this->created_at, true);
        $criteria->compare('updated_at', $this->updated_at, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}