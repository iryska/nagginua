<?php

/**
 * This is the model base class for the table "parser_queue".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ParserQueue".
 *
 * Columns in table "parser_queue" available as properties of the model,
 * followed by relations of table "parser_queue" available as properties of the model.
 *
 * @property integer $id
 * @property integer $source_id
 * @property string $url
 * @property string $status
 * @property string $created_at
 * @property string $updated_at
 *
 * @property Source $source
 */
abstract class BaseParserQueue extends GxActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'parser_queue';
    }

    public static function label($n = 1)
    {
        return Yii::t('app', 'ParserQueue|ParserQueues', $n);
    }

    public static function representingColumn()
    {
        return 'url';
    }

    public function rules()
    {
        return array(
            array('source_id, url, created_at', 'required'),
            array('source_id', 'numerical', 'integerOnly' => true),
            array('status', 'length', 'max' => 11),
            array('updated_at', 'safe'),
            array('status, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, source_id, url, status, created_at, updated_at', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'source' => array(self::BELONGS_TO, 'Source', 'source_id'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'source_id' => null,
            'url' => Yii::t('app', 'Url'),
            'status' => Yii::t('app', 'Status'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'source' => null,
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('source_id', $this->source_id);
        $criteria->compare('url', $this->url, true);
        $criteria->compare('status', $this->status, true);
        $criteria->compare('created_at', $this->created_at, true);
        $criteria->compare('updated_at', $this->updated_at, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }
}